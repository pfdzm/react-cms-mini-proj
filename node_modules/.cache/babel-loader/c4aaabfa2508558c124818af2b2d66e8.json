{"ast":null,"code":"var _jsxFileName = \"/mnt/d/Fernandez/Desktop/bootcamp/esmt-bc/20-State/01-Activities/react-app/src/utils/GlobalState.js\";\nimport React, { createContext, useReducer, useContext } from \"react\";\nconst TodosContext = createContext();\nconst {\n  Provider\n} = TodosContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add\":\n      return {\n        todos: [...state.todos, {\n          name: action.payload,\n          id: state.todos.length\n        }]\n      };\n\n    default:\n      throw new Error(`Invalid action type: ${action.type}`);\n  }\n};\n\nconst TodosProvider = ({\n  value = [],\n  ...props\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    todos: value\n  });\n  return React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nconst useTodosContext = () => {\n  return useContext(TodosContext);\n};\n\nexport { TodosProvider, useTodosContext };","map":{"version":3,"sources":["/mnt/d/Fernandez/Desktop/bootcamp/esmt-bc/20-State/01-Activities/react-app/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","TodosContext","Provider","reducer","state","action","type","todos","name","payload","id","length","Error","TodosProvider","value","props","dispatch","useTodosContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AAEA,MAAMC,YAAY,GAAGH,aAAa,EAAlC;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAO;AACLC,QAAAA,KAAK,EAAE,CACL,GAAGH,KAAK,CAACG,KADJ,EAEL;AAAEC,UAAAA,IAAI,EAAEH,MAAM,CAACI,OAAf;AAAwBC,UAAAA,EAAE,EAAEN,KAAK,CAACG,KAAN,CAAYI;AAAxC,SAFK;AADF,OAAP;;AAMF;AACE,YAAM,IAAIC,KAAJ,CAAW,wBAAuBP,MAAM,CAACC,IAAK,EAA9C,CAAN;AATJ;AAWD,CAZD;;AAcA,MAAMO,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAc,KAAGC;AAAjB,CAAD,KAA8B;AAClD,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBjB,UAAU,CAACI,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAEO;AAAT,GAAV,CAApC;AAEA,SAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACV,KAAD,EAAQY,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAJD;;AAMA,MAAME,eAAe,GAAG,MAAM;AAC5B,SAAOjB,UAAU,CAACC,YAAD,CAAjB;AACD,CAFD;;AAIA,SAASY,aAAT,EAAwBI,eAAxB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\n\nconst TodosContext = createContext();\nconst { Provider } = TodosContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add\":\n      return {\n        todos: [\n          ...state.todos,\n          { name: action.payload, id: state.todos.length }\n        ]\n      };\n    default:\n      throw new Error(`Invalid action type: ${action.type}`);\n  }\n};\n\nconst TodosProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, { todos: value });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useTodosContext = () => {\n  return useContext(TodosContext);\n};\n\nexport { TodosProvider, useTodosContext };\n"]},"metadata":{},"sourceType":"module"}